@using CoolBooks.Models
@model IEnumerable<CoolBooks.Models.Books>

@{
    ViewBag.Title = "Index";
    var authorization = new CoolBooks.Authorization(new Authentication());
    int i=0;
}

<h2>Books</h2>
@using (Html.BeginForm())
{
    <p>
        Search string: @Html.TextBox("SearchString")
        <input type="submit" value="Filter" class="btn btn-primary btn.marg"/>
    </p><br />
}
        <p>

            @if (User.IsInRole("Admin") || User.IsInRole("BasicUser"))
    {
     <button class="btn btn-primary btn-marg" onclick="document.location='/Books/Create'">Add Book</button>
}
        </p>
<table id="booksDataTable" class="table table-striped display table-hover" >
    <thead >

        <tr>
            <th>
                S.No
            </th>
            <th>
                Image
            </th>
            <th>
                Author
            </th>
            <th>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genres.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            @if (User.IsInRole("Admin"))
            {
            <th> @Html.DisplayNameFor(model => model.IsDeleted)</th>
            }
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            i = i + 1;
        <tr id="@item.Id" class="bookRow">
            <td>
                @i
            </td>
            <td>
                <img src="/Books/GetImage/@item.Id" height="120" width="120" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Authors.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Authors.LastName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Genres.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @if (item.Description.Length < 200)
    {
            @Html.DisplayFor(modelItem => item.Description)
                }
                else
                {
                    @item.Description.Remove(200, item.Description.Length - 200)<text>...</text>;

                }
            </td>
            @if (User.IsInRole("Admin"))
            {
            <td>
                @Html.DisplayFor(modelItem => item.IsDeleted)
            </td>
            }

            <td>
                @if (authorization.IsAuthorizedToEditBook(item, User))
                {
                    <text><a href="/Books/Edit/@item.Id" title="Edit"><span class="glyphicon glyphicon-edit link-color"></span></a></text>
                }
                <a href="/View/Index/@item.Id" title="View"><span class="glyphicon glyphicon-eye-open link-color"></span></a>
                @if (authorization.IsAuthorizedToDeleteBook(item, User) && !item.IsDeleted)
                {
                    <text><a href="/Books/Delete/@item.Id" title="Delete"><span class="glyphicon glyphicon-trash link-color js-delete"></span></a></text>
                }
                
            </td>
        </tr>
}
    </tbody>
</table>
<script>
    $(document).ready(function () {
        $('#booksDataTable tbody').on('click', 'tr', function (e) {
            var id = $(this).attr("id")
            document.location = '/View/Index/' + id;
        });

        var t = $("#booksDataTable").DataTable({
            "columnDefs": [
                { "width": "7%", "targets": 1 },
                { "width": "15%", "targets": 2 },
                { "width": "30%", "targets": 5 },
                { "width": "30%", "targets": 6 },
                @if (User.IsInRole("Admin") )
                {
                    <text>{ "width": "14%", "targets": 8 }, </text>
                } else if (User.IsInRole("BasicUser"))
                {
                    <text>{ "width": "8%", "targets": 7 }, </text>
                }
                { "orderable": false, "targets": 0 },
                { "orderable": false, "targets": 1 },
                { "orderable": false, "targets": 7 },
                @if (User.IsInRole("Admin")) {
                    <text>{ "orderable": false, "targets": 8 }, </text>
                }
            ],
            "order": [[1, 'asc']],
            "searching":false
        });

    });

</script>
