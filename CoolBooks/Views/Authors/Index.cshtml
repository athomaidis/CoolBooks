@model IEnumerable<CoolBooks.Models.Authors>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
<div>
    
    <a href="@Url.Action("Create", "Authors")">
        <span class="btn btn-primary btn-marg">Add Author</span>
    </a>

</div>

<table class="table table-hover" id="authors">
    <thead>
        <tr>
            <th width="10%">
                Sr.No
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @{
            int sno = 0;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td width="10%">
                    @{ sno++; }
                    @sno
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <a href="@Url.Action("Edit", "Authors", new { id = item.Id})">
                        <span class="glyphicon glyphicon-edit link-color"></span>
                    </a>&nbsp;|&nbsp;

                    <a href="@Url.Action("Details", "Authors", new { id = item.Id})">
                        <span class="glyphicon glyphicon-eye-open link-color"></span>
                    </a>|&nbsp;

                    <span class="glyphicon glyphicon-trash link-color js-delete" data-author-id="@item.Id"></span>
                </td>
            </tr>
        }
    </tbody>

</table>

@section scripts
{
<script>
    // Delete a author with without page reload
    $(document).ready(function () {
        // Display Only 80 Chars into the table
        $("#authors").DataTable({
            "columnDefs": [
                { "width": "15%", "targets": 0 },
                { "width": "8%", "targets": 2 },
                { "orderable": false, "targets": 2 },
                {
                    "targets": 3,
                    "render": function (data, type, full, meta) {
                        if (type === 'display') {
                            data = strtrunc(data, 80);
                        }
                        return data;
                    }
                }
            ]
        });

        // Delete Author 
        $("#authors").on("click", ".js-delete",
            function () {
                var button = $(this);
                bootbox.confirm("Are you sure you want to delete this author", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/authors/" + button.attr("data-author-id"),
                            method: "DELETE",
                            success: function () {
                                button.parents("tr").remove();
                            }
                        });
                    }
                });
            });


        // Flash Messsage Hide.
        $(".flash-messages").delay(3000).slideUp(300);

    });


    function strtrunc(str, max, add) {
        add = add || '...';
        return (typeof str === 'string' && str.length > max ? str.substring(0, max) + add : str);
    };

    


    </script>
}